// Generated by CoffeeScript 1.6.3
(function() {
  var Loader, Program, api, args, fs, jake, jakeLib, jakePkg, main, path, program, utils,
    __hasProp = {}.hasOwnProperty,
    __slice = [].slice;

  path = require('path');

  fs = require('fs');

  jakeLib = path.dirname(require.resolve('jake'));

  jake = require("" + jakeLib + "/jake");

  api = require("" + jakeLib + "/api");

  utils = require("" + jakeLib + "/utils");

  Program = require("" + jakeLib + "/program").Program;

  Loader = require("" + jakeLib + "/loader").Loader;

  jakePkg = JSON.parse(fs.readFileSync("" + jakeLib + "/../package.json", 'utf-8'));

  jake.version = jakePkg.version;

  process.addListener('uncaughtException', function(err) {
    return program.handleErr(err);
  });

  global.jake = jake;

  args = process.argv.slice(2);

  program = new Program();

  program.parseArgs(args);

  main = function(Tintan) {
    var boot, loader, n, taskNames, v, _ref;
    jake.opts = program.opts;
    jake.program = program;
    for (n in utils) {
      if (!__hasProp.call(utils, n)) continue;
      v = utils[n];
      jake[n] = v;
    }
    jake.FileList = require("" + jakeLib + "/file_list").FileList;
    jake.PackageTask = require("" + jakeLib + "/file_list").PackageTask;
    jake.NpmPublishTask = require("" + jakeLib + "/file_list").NpmPublishTask;
    jake.WatchTask = require("./watch_task").WatchTask;
    _ref = jake.env;
    for (n in _ref) {
      if (!__hasProp.call(_ref, n)) continue;
      v = _ref[n];
      process.env[n] = v;
    }
    if (jake.opts.directory) {
      process.chdir(jake.opts.directory);
    }
    api.invoke = function() {
      var args, taskname;
      taskname = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return jake.Task[taskname].invoke.apply(jake.Task[taskname], args);
    };
    for (n in api) {
      if (!__hasProp.call(api, n)) continue;
      v = api[n];
      global[n] = v;
    }
    if (process.env.TINTAN) {
      Tintan.env = JSON.parse(process.env.TINTAN);
    } else {
      Tintan.env = {};
    }
    taskNames = program.taskNames;
    boot = require('./boot')(Tintan);
    if (boot.ready()) {
      loader = new Loader();
      loader.loadFile(jake.opts.jakefile);
      loader.loadDirectory(jake.opts.jakelibdir);
    } else if (!taskNames.length) {
      taskNames = ['boot:init'];
    }
    taskNames = taskNames.length && taskNames || ['default'];
    api.task('__root__', taskNames, function() {});
    if (jake.opts.tasks) {
      return jake.showAllTaskDescriptions(jake.opts.tasks);
    } else {
      return invoke('__root__');
    }
  };

  module.exports = program.firstPreemptiveOption() && (function() {}) || main;

}).call(this);

/*
//@ sourceMappingURL=main.map
*/
